global
    log 127.0.0.1   syslog info
    daemon
    user vcap
    group vcap
    maxconn 64000
    spread-checks 4

defaults
    log global
    timeout connect 30000ms
    maxconn 64000
    <% if p("request_timeout_in_seconds").to_i > 0 %>
        timeout client <%= p("request_timeout_in_seconds").to_i * 1000 %>ms
        timeout server <%= p("request_timeout_in_seconds").to_i * 1000 %>ms
    <% end %>

<% unless p("ha_proxy.disable_http") %>
frontend http-in
    mode http
    bind :80
    option httplog
    option forwardfor
    reqadd X-Forwarded-Proto:\ http
    default_backend http-routers
<% if p("ha_proxy.internal_only_domains").size > 0 %>
    acl public src 0.0.0.0/0
<% p("ha_proxy.internal_only_domains").each do |domain| %>
    acl internal hdr(Host) -m sub <%= domain %>
    block if internal public
<% end %>
<% end %>
<% end %>

<% if p("ha_proxy.ssl_pem") %>
frontend https-in
    mode http
    bind :443 ssl crt /var/vcap/jobs/haproxy/config/cert.pem no-sslv3 ciphers <%= p("ha_proxy.ssl_ciphers") %>
    option httplog
    option forwardfor
    option http-server-close
    reqadd X-Forwarded-Proto:\ https
    default_backend http-routers
<% if p("ha_proxy.internal_only_domains").size > 0 %>
    acl public src 0.0.0.0/0
<% p("ha_proxy.internal_only_domains").each do |domain| %>
    acl internal hdr(Host) -m sub <%= domain %>
    block if internal public
<% end %>
<% end %>

<% if p("ha_proxy.allow_tcp_proxying") == true %>
frontend ssl-in
    mode tcp
    bind :4443 ssl crt /var/vcap/jobs/haproxy/config/cert.pem no-sslv3 ciphers <%= p("ha_proxy.ssl_ciphers") %>
    default_backend tcp-routers
<% end %>
<% end %>

backend http-routers
    mode http
    balance roundrobin
    <% size = p("router.servers.z1").size %>

    <% p("router.servers.z1").each_with_index do |ip, index| %>
        server node<%= index %> <%= ip %>:<%= p("router.port") %> check inter 1000
    <% end %>
    <% p("router.servers.z2").each_with_index do |ip, index| %>
        server node<%= index + size %> <%= ip %>:<%= p("router.port") %> check inter 1000
    <% end %>

<% if p("ha_proxy.allow_tcp_proxying") == true %>
backend tcp-routers
    mode tcp
    balance roundrobin
    <% size = p("router.servers.z1").size %>

    <% p("router.servers.z1").each_with_index do |ip, index| %>
        server node<%= index %> <%= ip %>:<%= p("router.port") %> check inter 1000
    <% end %>
    <% p("router.servers.z2").each_with_index do |ip, index| %>
        server node<%= index + size %> <%= ip %>:<%= p("router.port") %> check inter 1000
    <% end %>
<% end %>
